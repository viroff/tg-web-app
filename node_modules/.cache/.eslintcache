[{"C:\\Projects\\PosterInfo\\tg-web-app\\src\\index.js":"1","C:\\Projects\\PosterInfo\\tg-web-app\\src\\App.js":"2","C:\\Projects\\PosterInfo\\tg-web-app\\src\\reportWebVitals.js":"3","C:\\Projects\\PosterInfo\\tg-web-app\\src\\API\\geoApi.js":"4","C:\\Projects\\PosterInfo\\tg-web-app\\src\\Components\\FileUploader.js":"5","C:\\Projects\\PosterInfo\\tg-web-app\\src\\utils\\addposter.js":"6","C:\\Projects\\PosterInfo\\tg-web-app\\src\\api\\geoApi.js":"7","C:\\Projects\\PosterInfo\\tg-web-app\\src\\utils\\validators.js":"8","C:\\Projects\\PosterInfo\\tg-web-app\\src\\utils\\base64toFile.js":"9"},{"size":352,"mtime":1672081038816,"results":"10","hashOfConfig":"11"},{"size":17577,"mtime":1686949192804,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1670009453507,"results":"13","hashOfConfig":"11"},{"size":1132,"mtime":1685478714555,"results":"14","hashOfConfig":"11"},{"size":2262,"mtime":1686510212200,"results":"15","hashOfConfig":"11"},{"size":4465,"mtime":1686425396797,"results":"16","hashOfConfig":"11"},{"size":1132,"mtime":1685478714555,"results":"17","hashOfConfig":"11"},{"size":2410,"mtime":1686429206538,"results":"18","hashOfConfig":"11"},{"size":363,"mtime":1686949008725,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"15wtzlf",{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Projects\\PosterInfo\\tg-web-app\\src\\index.js",[],[],[],"C:\\Projects\\PosterInfo\\tg-web-app\\src\\App.js",["49","50","51","52","53","54"],[],"C:\\Projects\\PosterInfo\\tg-web-app\\src\\reportWebVitals.js",[],[],"C:\\Projects\\PosterInfo\\tg-web-app\\src\\API\\geoApi.js",[],[],"C:\\Projects\\PosterInfo\\tg-web-app\\src\\Components\\FileUploader.js",[],[],"C:\\Projects\\PosterInfo\\tg-web-app\\src\\utils\\addposter.js",[],[],"C:\\Projects\\PosterInfo\\tg-web-app\\src\\api\\geoApi.js",[],[],"C:\\Projects\\PosterInfo\\tg-web-app\\src\\utils\\validators.js",["55","56","57"],[],"import { formatPhoneNumber, formatPhoneNumberIntl, isValidPhoneNumber, isPossiblePhoneNumber } from 'react-phone-number-input';\r\n\r\nexport const validatePhone = (value) => {\r\n    let error = '';\r\n    if (!value.startsWith('+')) {\r\n        error = 'Укажите телефон в международном формате';\r\n    }\r\n    else if (!isPossiblePhoneNumber(value)) {\r\n        error = 'Указан неверный номер телефона';\r\n    }\r\n    return error;\r\n}\r\nexport const validateMark = (value) => {\r\n    let error = '';\r\n    if (value === '') { error = 'Заполните все поля' }\r\n    return error;\r\n}\r\nexport const validateModel = (value) => {\r\n    let error = '';\r\n    if (value === '') { error = 'Заполните все поля' }\r\n    return error;\r\n}\r\nexport const validateGeneration = (value) => {\r\n    let error = '';\r\n    if (value === '') { error = 'Заполните все поля' }\r\n    return error;\r\n}\r\nexport const validateConfiguration = (value) => {\r\n    let error = '';\r\n    if (value === '') { error = 'Заполните все поля' }\r\n    return error;\r\n}\r\nexport const validateModification = (value) => {\r\n    let error = '';\r\n    if (value === '') { error = 'Заполните все поля' }\r\n    return error;\r\n}\r\nexport const validateMileage = (value) => {\r\n    let error = '';\r\n    if (value === '') { error = 'Заполните все поля' }\r\n    return error;\r\n}\r\nexport const validateCondition = (value) => {\r\n    let error = '';\r\n    if (value === '') { error = 'Заполните все поля' }\r\n    return error;\r\n}\r\nexport const validateSellingType = (value) => {\r\n    let error = '';\r\n    if (value === '') { error = 'Заполните все поля' }\r\n    return error;\r\n}\r\nexport const validateCountry = (value) => {\r\n    let error = '';\r\n    if (value === '') { error = 'Заполните все поля' }\r\n    return error;\r\n}\r\nexport const validateCity = (value) => {\r\n    let error = '';\r\n    if (value === '') { error = 'Заполните все поля' }\r\n    return error;\r\n}\r\nexport const validateInfo = (value) => {\r\n    let error = '';\r\n    if (value === '') { error = 'Заполните все поля' }\r\n    return error;\r\n}\r\nexport const validateYear = (value) => {\r\n    let error = '';\r\n    if (value === '') { error = 'Заполните все поля' }\r\n    return error;\r\n}","C:\\Projects\\PosterInfo\\tg-web-app\\src\\utils\\base64toFile.js",[],[],{"ruleId":"58","severity":1,"message":"59","line":2,"column":8,"nodeType":"60","messageId":"61","endLine":2,"endColumn":18},{"ruleId":"58","severity":1,"message":"62","line":39,"column":7,"nodeType":"60","messageId":"61","endLine":39,"endColumn":9},{"ruleId":"58","severity":1,"message":"63","line":154,"column":13,"nodeType":"60","messageId":"61","endLine":154,"endColumn":25},{"ruleId":"58","severity":1,"message":"64","line":155,"column":13,"nodeType":"60","messageId":"61","endLine":155,"endColumn":23},{"ruleId":"58","severity":1,"message":"65","line":159,"column":13,"nodeType":"60","messageId":"61","endLine":159,"endColumn":22},{"ruleId":"58","severity":1,"message":"66","line":160,"column":13,"nodeType":"60","messageId":"61","endLine":160,"endColumn":28},{"ruleId":"58","severity":1,"message":"67","line":1,"column":10,"nodeType":"60","messageId":"61","endLine":1,"endColumn":27},{"ruleId":"58","severity":1,"message":"68","line":1,"column":29,"nodeType":"60","messageId":"61","endLine":1,"endColumn":50},{"ruleId":"58","severity":1,"message":"69","line":1,"column":52,"nodeType":"60","messageId":"61","endLine":1,"endColumn":70},"no-unused-vars","'classnames' is defined but never used.","Identifier","unusedVar","'tg' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'handleBlur' is assigned a value but never used.","'setErrors' is assigned a value but never used.","'setFieldTouched' is assigned a value but never used.","'formatPhoneNumber' is defined but never used.","'formatPhoneNumberIntl' is defined but never used.","'isValidPhoneNumber' is defined but never used."]