{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\PosterInfo\\\\ClientApp\\\\src\\\\App.js\";\nimport React from 'react';\nimport classnames from 'classnames';\nimport { Formik, Form, Field } from 'formik';\nimport styles from './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction validateEmail(value) {\n  if (!value) {\n    return 'Required';\n  } else if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(value)) {\n    return 'invalid email address';\n  }\n}\nfunction validatePassword(value) {\n  if (!value) {\n    return 'Required';\n  }\n}\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          email: '',\n          password: ''\n        },\n        onSubmit: values => {\n          console.log('submit', values);\n        },\n        children: (errors, touched) => {\n          /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: classnames(styles.label, {\n                [styles.errorLabel]: errors.email && touched.email\n              }),\n              children: \"e-mail\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              className: classnames(styles.field, {\n                [styles.errorInput]: errors.email && touched.email\n              }),\n              name: \"email\",\n              validate: validateEmail\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: classnames(styles.label, {\n                [styles.errorLabel]: errors.password && touched.password\n              }),\n              children: \"pwd\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              className: classnames(styles.field, {\n                [styles.errorInput]: errors.password && touched.password\n              }),\n              name: \"password\",\n              validate: validatePassword\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 15\n            }, this), errors.password && touched.password && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.error,\n              children: errors.password\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","classnames","Formik","Form","Field","styles","validateEmail","value","test","validatePassword","App","email","password","values","console","log","errors","touched","label","errorLabel","field","errorInput","error"],"sources":["C:/Projects/PosterInfo/ClientApp/src/App.js"],"sourcesContent":["\nimport React from 'react';\nimport classnames from 'classnames';\nimport { Formik, Form, Field } from 'formik';\nimport styles from './App.css';\n\nfunction validateEmail(value) {\n  if (!value) {\n    return 'Required';\n  }\n  else if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(value)) {\n    return 'invalid email address';\n  }\n}\nfunction validatePassword(value) {\n  if (!value) { return 'Required'; }\n}\nfunction App() {\n  return (\n    <React.Fragment>\n      <div className=\"App\">\n        <Formik\n          initialValues={{ email: '', password: '' }}\n          onSubmit={values => {\n            console.log('submit', values)\n          }}\n        >\n          {(errors, touched) => {\n            <Form>\n              <label className={classnames(\n                styles.label, { [styles.errorLabel]: errors.email && touched.email }\n              )}\n              >\n                e-mail\n              </label>\n              <Field className={classnames(\n                styles.field, { [styles.errorInput]: errors.email && touched.email }\n              )}\n                name=\"email\"\n                validate={validateEmail}\n              />\n              <label className={classnames(\n                styles.label, { [styles.errorLabel]: errors.password && touched.password }\n              )}\n              >\n                pwd\n              </label>\n              <Field className={classnames(\n                styles.field, { [styles.errorInput]: errors.password && touched.password }\n              )}\n                name=\"password\"\n                validate={validatePassword}\n              />\n              {errors.password && touched.password && (\n                <div className={styles.error}>{errors.password}</div>\n              )}\n              <button type=\"submit\">Submit</button>\n            </Form>\n          }}\n\n        </Formik>\n      </div>\n    </React.Fragment>)\n}\nexport default App;\n"],"mappings":";AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU,MAAM,YAAY;AACnC,SAASC,MAAM,EAAEC,IAAI,EAAEC,KAAK,QAAQ,QAAQ;AAC5C,OAAOC,MAAM,MAAM,WAAW;AAAC;AAE/B,SAASC,aAAa,CAACC,KAAK,EAAE;EAC5B,IAAI,CAACA,KAAK,EAAE;IACV,OAAO,UAAU;EACnB,CAAC,MACI,IAAI,CAAC,4BAA4B,CAACC,IAAI,CAACD,KAAK,CAAC,EAAE;IAClD,OAAO,uBAAuB;EAChC;AACF;AACA,SAASE,gBAAgB,CAACF,KAAK,EAAE;EAC/B,IAAI,CAACA,KAAK,EAAE;IAAE,OAAO,UAAU;EAAE;AACnC;AACA,SAASG,GAAG,GAAG;EACb,oBACE,QAAC,KAAK,CAAC,QAAQ;IAAA,uBACb;MAAK,SAAS,EAAC,KAAK;MAAA,uBAClB,QAAC,MAAM;QACL,aAAa,EAAE;UAAEC,KAAK,EAAE,EAAE;UAAEC,QAAQ,EAAE;QAAG,CAAE;QAC3C,QAAQ,EAAEC,MAAM,IAAI;UAClBC,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEF,MAAM,CAAC;QAC/B,CAAE;QAAA,UAED,CAACG,MAAM,EAAEC,OAAO,KAAK;UACpB,qBAAC,IAAI;YAAA,wBACH;cAAO,SAAS,EAAEhB,UAAU,CAC1BI,MAAM,CAACa,KAAK,EAAE;gBAAE,CAACb,MAAM,CAACc,UAAU,GAAGH,MAAM,CAACL,KAAK,IAAIM,OAAO,CAACN;cAAM,CAAC,CACpE;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAGM,eACR,QAAC,KAAK;cAAC,SAAS,EAAEV,UAAU,CAC1BI,MAAM,CAACe,KAAK,EAAE;gBAAE,CAACf,MAAM,CAACgB,UAAU,GAAGL,MAAM,CAACL,KAAK,IAAIM,OAAO,CAACN;cAAM,CAAC,CACpE;cACA,IAAI,EAAC,OAAO;cACZ,QAAQ,EAAEL;YAAc;cAAA;cAAA;cAAA;YAAA,QACxB,eACF;cAAO,SAAS,EAAEL,UAAU,CAC1BI,MAAM,CAACa,KAAK,EAAE;gBAAE,CAACb,MAAM,CAACc,UAAU,GAAGH,MAAM,CAACJ,QAAQ,IAAIK,OAAO,CAACL;cAAS,CAAC,CAC1E;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAGM,eACR,QAAC,KAAK;cAAC,SAAS,EAAEX,UAAU,CAC1BI,MAAM,CAACe,KAAK,EAAE;gBAAE,CAACf,MAAM,CAACgB,UAAU,GAAGL,MAAM,CAACJ,QAAQ,IAAIK,OAAO,CAACL;cAAS,CAAC,CAC1E;cACA,IAAI,EAAC,UAAU;cACf,QAAQ,EAAEH;YAAiB;cAAA;cAAA;cAAA;YAAA,QAC3B,EACDO,MAAM,CAACJ,QAAQ,IAAIK,OAAO,CAACL,QAAQ,iBAClC;cAAK,SAAS,EAAEP,MAAM,CAACiB,KAAM;cAAA,UAAEN,MAAM,CAACJ;YAAQ;cAAA;cAAA;cAAA;YAAA,QAC/C,eACD;cAAQ,IAAI,EAAC,QAAQ;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAAgB;UAAA;YAAA;YAAA;YAAA;UAAA,QAChC;QACT;MAAC;QAAA;QAAA;QAAA;MAAA;IAEM;MAAA;MAAA;MAAA;IAAA;EACL;IAAA;IAAA;IAAA;EAAA,QACS;AACrB;AAAC,KA9CQF,GAAG;AA+CZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}