{"ast":null,"code":"'use strict';\n\nfunction preserveCamelCase(str) {\n  let isLastCharLower = false;\n  let isLastCharUpper = false;\n  let isLastLastCharUpper = false;\n  for (let i = 0; i < str.length; i++) {\n    const c = str[i];\n    if (isLastCharLower && /[a-zA-Z]/.test(c) && c.toUpperCase() === c) {\n      str = str.substr(0, i) + '-' + str.substr(i);\n      isLastCharLower = false;\n      isLastLastCharUpper = isLastCharUpper;\n      isLastCharUpper = true;\n      i++;\n    } else if (isLastCharUpper && isLastLastCharUpper && /[a-zA-Z]/.test(c) && c.toLowerCase() === c) {\n      str = str.substr(0, i - 1) + '-' + str.substr(i - 1);\n      isLastLastCharUpper = isLastCharUpper;\n      isLastCharUpper = false;\n      isLastCharLower = true;\n    } else {\n      isLastCharLower = c.toLowerCase() === c;\n      isLastLastCharUpper = isLastCharUpper;\n      isLastCharUpper = c.toUpperCase() === c;\n    }\n  }\n  return str;\n}\nmodule.exports = function (str) {\n  if (arguments.length > 1) {\n    str = Array.from(arguments).map(x => x.trim()).filter(x => x.length).join('-');\n  } else {\n    str = str.trim();\n  }\n  if (str.length === 0) {\n    return '';\n  }\n  if (str.length === 1) {\n    return str.toLowerCase();\n  }\n  if (/^[a-z0-9]+$/.test(str)) {\n    return str;\n  }\n  const hasUpperCase = str !== str.toLowerCase();\n  if (hasUpperCase) {\n    str = preserveCamelCase(str);\n  }\n  return str.replace(/^[_.\\- ]+/, '').toLowerCase().replace(/[_.\\- ]+(\\w|$)/g, (m, p1) => p1.toUpperCase());\n};","map":{"version":3,"names":["preserveCamelCase","str","isLastCharLower","isLastCharUpper","isLastLastCharUpper","i","length","c","test","toUpperCase","substr","toLowerCase","module","exports","arguments","Array","from","map","x","trim","filter","join","hasUpperCase","replace","m","p1"],"sources":["C:/Projects/PosterInfo/ClientApp/node_modules/formic/node_modules/camelcase/index.js"],"sourcesContent":["'use strict';\n\nfunction preserveCamelCase(str) {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < str.length; i++) {\n\t\tconst c = str[i];\n\n\t\tif (isLastCharLower && /[a-zA-Z]/.test(c) && c.toUpperCase() === c) {\n\t\t\tstr = str.substr(0, i) + '-' + str.substr(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && /[a-zA-Z]/.test(c) && c.toLowerCase() === c) {\n\t\t\tstr = str.substr(0, i - 1) + '-' + str.substr(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = c.toLowerCase() === c;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = c.toUpperCase() === c;\n\t\t}\n\t}\n\n\treturn str;\n}\n\nmodule.exports = function (str) {\n\tif (arguments.length > 1) {\n\t\tstr = Array.from(arguments)\n\t\t\t.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tstr = str.trim();\n\t}\n\n\tif (str.length === 0) {\n\t\treturn '';\n\t}\n\n\tif (str.length === 1) {\n\t\treturn str.toLowerCase();\n\t}\n\n\tif (/^[a-z0-9]+$/.test(str)) {\n\t\treturn str;\n\t}\n\n\tconst hasUpperCase = str !== str.toLowerCase();\n\n\tif (hasUpperCase) {\n\t\tstr = preserveCamelCase(str);\n\t}\n\n\treturn str\n\t\t.replace(/^[_.\\- ]+/, '')\n\t\t.toLowerCase()\n\t\t.replace(/[_.\\- ]+(\\w|$)/g, (m, p1) => p1.toUpperCase());\n};\n"],"mappings":"AAAA,YAAY;;AAEZ,SAASA,iBAAiB,CAACC,GAAG,EAAE;EAC/B,IAAIC,eAAe,GAAG,KAAK;EAC3B,IAAIC,eAAe,GAAG,KAAK;EAC3B,IAAIC,mBAAmB,GAAG,KAAK;EAE/B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,GAAG,CAACK,MAAM,EAAED,CAAC,EAAE,EAAE;IACpC,MAAME,CAAC,GAAGN,GAAG,CAACI,CAAC,CAAC;IAEhB,IAAIH,eAAe,IAAI,UAAU,CAACM,IAAI,CAACD,CAAC,CAAC,IAAIA,CAAC,CAACE,WAAW,EAAE,KAAKF,CAAC,EAAE;MACnEN,GAAG,GAAGA,GAAG,CAACS,MAAM,CAAC,CAAC,EAAEL,CAAC,CAAC,GAAG,GAAG,GAAGJ,GAAG,CAACS,MAAM,CAACL,CAAC,CAAC;MAC5CH,eAAe,GAAG,KAAK;MACvBE,mBAAmB,GAAGD,eAAe;MACrCA,eAAe,GAAG,IAAI;MACtBE,CAAC,EAAE;IACJ,CAAC,MAAM,IAAIF,eAAe,IAAIC,mBAAmB,IAAI,UAAU,CAACI,IAAI,CAACD,CAAC,CAAC,IAAIA,CAAC,CAACI,WAAW,EAAE,KAAKJ,CAAC,EAAE;MACjGN,GAAG,GAAGA,GAAG,CAACS,MAAM,CAAC,CAAC,EAAEL,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,GAAGJ,GAAG,CAACS,MAAM,CAACL,CAAC,GAAG,CAAC,CAAC;MACpDD,mBAAmB,GAAGD,eAAe;MACrCA,eAAe,GAAG,KAAK;MACvBD,eAAe,GAAG,IAAI;IACvB,CAAC,MAAM;MACNA,eAAe,GAAGK,CAAC,CAACI,WAAW,EAAE,KAAKJ,CAAC;MACvCH,mBAAmB,GAAGD,eAAe;MACrCA,eAAe,GAAGI,CAAC,CAACE,WAAW,EAAE,KAAKF,CAAC;IACxC;EACD;EAEA,OAAON,GAAG;AACX;AAEAW,MAAM,CAACC,OAAO,GAAG,UAAUZ,GAAG,EAAE;EAC/B,IAAIa,SAAS,CAACR,MAAM,GAAG,CAAC,EAAE;IACzBL,GAAG,GAAGc,KAAK,CAACC,IAAI,CAACF,SAAS,CAAC,CACzBG,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACC,IAAI,EAAE,CAAC,CAClBC,MAAM,CAACF,CAAC,IAAIA,CAAC,CAACZ,MAAM,CAAC,CACrBe,IAAI,CAAC,GAAG,CAAC;EACZ,CAAC,MAAM;IACNpB,GAAG,GAAGA,GAAG,CAACkB,IAAI,EAAE;EACjB;EAEA,IAAIlB,GAAG,CAACK,MAAM,KAAK,CAAC,EAAE;IACrB,OAAO,EAAE;EACV;EAEA,IAAIL,GAAG,CAACK,MAAM,KAAK,CAAC,EAAE;IACrB,OAAOL,GAAG,CAACU,WAAW,EAAE;EACzB;EAEA,IAAI,aAAa,CAACH,IAAI,CAACP,GAAG,CAAC,EAAE;IAC5B,OAAOA,GAAG;EACX;EAEA,MAAMqB,YAAY,GAAGrB,GAAG,KAAKA,GAAG,CAACU,WAAW,EAAE;EAE9C,IAAIW,YAAY,EAAE;IACjBrB,GAAG,GAAGD,iBAAiB,CAACC,GAAG,CAAC;EAC7B;EAEA,OAAOA,GAAG,CACRsB,OAAO,CAAC,WAAW,EAAE,EAAE,CAAC,CACxBZ,WAAW,EAAE,CACbY,OAAO,CAAC,iBAAiB,EAAE,CAACC,CAAC,EAAEC,EAAE,KAAKA,EAAE,CAAChB,WAAW,EAAE,CAAC;AAC1D,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}